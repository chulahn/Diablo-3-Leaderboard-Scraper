<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title><%- region %> <%- leaderboardType %> <%- title %></title>
	<script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.3.11/d3.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/d3-tip/0.6.3/d3-tip.min.js"></script>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/bootstrap/3.3.0/css/bootstrap.min.css">	
	<link rel="stylesheet" type="text/css" href="../../../styles/leaderboard.css">

	<script>
		var allGRiftHeroes = <%- JSON.stringify(ejs_allGRiftHeroes)%>;
		var allBattletags = <%- JSON.stringify(ejs_battletags) %>;

		function addAvgData() {
			var statHTML = ""
			var zeroCount = 0;
			var allStats;
			var medianGrift;

			function calcAvgData() {
				allStats = allGRiftHeroes.reduce(function (prev, currentValue) {
								 	var newVar = {};
								 	if (currentValue == 0) {
								 		zeroCount++;
								 	}

								 	// console.log(allGRiftHeroes);
								 	for (key in currentValue.stats) {
								 		newVar[key] = (prev[key] || 0) + currentValue.stats[key]; 
								 	}
								 	var elemDam = (currentValue.extraItemData && currentValue.extraItemData.elementalDam[0][1]) || 0;
								 	elemDam = 1 + (elemDam/100);

								 	var eliteDam = (currentValue.extraItemData && currentValue.extraItemData.eliteDam) || 0;
								 	eliteDam = 1 + (eliteDam/100);

								 	//when 0 is passed due to dead hc players
								 	var damage = (currentValue.stats && currentValue.stats.damage) || 0;

								 	newVar.elemDam = (prev.elemDam || 0) + 
								 	(elemDam * damage);

								 	newVar.eliteElemDam = (prev.eliteElemDam || 0) + 
								 	(elemDam * eliteDam * damage);

								 	var cooldown = parseFloat(currentValue.extraItemData && currentValue.extraItemData.cooldown) || 0;

								 	newVar.cooldown = (prev.cooldown || 0) + cooldown;
								 	newVar.paragonLevel = (prev.paragonLevel || 0) + parseFloat(currentValue.paragonLevel || 0);
									return newVar;
								},0);
				
				//if zero was passed in, dont include in average calc (dead hc heroes lowered average)
				var actualLength = allGRiftHeroes.length - zeroCount;

				//calculate avg allRes
				var allRes = 0;
				for (key in allStats) {
					if (key.indexOf("Resist") != -1) {
						allRes += allStats[key];
						console.log(allStats[key],allRes, key)
					}
					allStats[key] /= actualLength;
					if (key === "arcaneResist") {
						allStats.allRes = allRes / (6*actualLength);
					}
				}

				medianGrift =  parseInt(allBattletags[allBattletags.length/2]["Greater Rift"]) + parseInt(allBattletags[(allBattletags.length/2) - 1]["Greater Rift"])
				medianGrift /= 2;
			}
			function createHTML() {
				statHTML += "Elemental Damage: " + Number(allStats.elemDam.toFixed(0)).toLocaleString('en') + "<br/>";
				statHTML += "Elite Elemental Damage: " + Number(allStats.eliteElemDam.toFixed(0)).toLocaleString('en') + "</br/>";
				statHTML += "Toughness: " + Number(allStats.toughness.toFixed(0)).toLocaleString('en') + "<br />";
				statHTML += "Life: " + Number(allStats.life.toFixed(0)).toLocaleString('en') + "<br />";
				statHTML += "All Resist: " + allStats.allRes.toFixed(0) + "<br />"
				statHTML += "Cooldown Reduction: " + allStats.cooldown.toFixed(2) + "%<br />";
				statHTML += "Average Paragon: " + allStats.paragonLevel.toFixed(0) +"<br />";
				statHTML += "Median GRift Level: " + medianGrift + "<br />";
				statHTML += "Crit Chance: " + (allStats.critChance * 100).toFixed(0) + "%<br />";
				statHTML += "Crit Dam: " + (allStats.critDamage * 100).toFixed(0) + "%<br />";
				statHTML += "CD/CC: " + (allStats.critDamage / allStats.critChance).toFixed(2) + "<br />";
			}

			calcAvgData();
			createHTML();
			$('#statistics').html(statHTML);
		}

		function createStatNav() {
			
			var statsArray = ['dps', 'toughness', 'elemDps', 'eliteElemDps'];
			var statsOnPage = ['DPS', 'Toughness', 'Elemental DPS', 'Elite Elemental DPS'];

			var statsPickHTML = "";

			statsArray.forEach(function (stat) {
				statsPickHTML += "<a href=\"#\" id=" + stat + ">";
				var statsOutputInd = statsArray.indexOf(stat);
				statsPickHTML += statsOnPage[statsOutputInd];
				statsPickHTML += "</span><br/>"
			});

			$('#statPicker').append(statsPickHTML); 
		}


		$(document).ready(function () {

			addAvgData();
			createStatNav();
		
			$('#top').hide();
			$('#skillPicker').hide();
			$('#dps').attr('class', 'currentGraph');

			$('#statPicker a').each(function () {
				var statToCalc = $(this).attr('id');
				
				$(this).on('click' , function() {
					
					drawStatGraph(currentTop, statToCalc);

					$('#itemGraphDiv').hide();
					$('#skillGraphDiv').hide();
					$('.currentGraph').removeClass('currentGraph');			
					
					$(this).addClass('currentGraph');
					$('#mainStatsDiv').show();

				});
			});
		})

		$(window).scroll(function() {
			if ($(window).scrollTop() > 400) {
	        	$('#top').show();
			}

		    else {
		        $('#top').hide();
		    }
		});
	</script>		
</head>


<body>
	<header>
		<h1 id="#"> <%- region.toUpperCase() %> <%- leaderboardType.toUpperCase() %> <%- title.toUpperCase() %></h1>
		<a href="#" id="top">top</a>
		<div id="update">
			<% if (lastupdated != 0) { %>
				<% var lastUpdated = lastupdated.getMonth()+1 + "/" + lastupdated.getDate() + "/" + (lastupdated.getYear()+1900) %>
				leaderboard last updated: <%= lastUpdated %><br />
			<% } %>
			<a class="update" href="/update/<%- region %>/<%- leaderboardType %>/<%- title %>">update leaderboard</a>
		</div>
	</header>


<div id = "container">
	<div id="statistics">
	</div>

	<div id="graphChooser">
		<span id="itemSpan">Items</span><br />
		<div id="itemPicker"></div>
		
		<span id="statSpan" class="selected">Stats</span><br />
		<div id="statPicker"></div>	

		<span id="skillSpan">Skills</span><br />
		<div id="skillPicker"><a href="#" id="primary">Primary</a> <a href="#" id="passives">Passives</a></div> 
	</div>

	<div id="graph">
		<br />
		<div id="mainStatsDiv"></div>
		<div id="itemGraphDiv"></div>
		<div id="gemGraphDiv"></div>
		<div id="skillGraphDiv"></div>
	</div>
</div>
	<!-- List of all the BattleTags for the corresponding Leaderboard -->
	<table>
		<tr>
			<th>Standing</th>
			<th>Battletag</th>
			<th>Greater Rift</th>
			<th>Time Spent</th>
			<th>Date Completed</th>
		</tr>
		<% ejs_battletags.slice(0,100).forEach(function (tag) { %>
			
			<tr id="<%= tag.Standing %>">
				<td><%= ejs_battletags.indexOf(tag)+1 %></td>
				<td><a class="<%= tag.class %>" href="/player/<%= tag.Battletag.replace("#","-") %>" ><%= tag.Battletag %></a></td>
				<td><%= tag["Greater Rift"] %></td>
				<td><%= tag["Time Spent"] %></td>
				<td><%= tag["Date Completed"] %></td>
			</tr>

		<% }) %>
	</table>

	<script src="../../../d3functions.js"></script>
</body>